//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KeepRunning.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KeepRunning.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is still being monitored. ähnelt.
        /// </summary>
        internal static string _0IsStillBeingMonitored {
            get {
                return ResourceManager.GetString("_0IsStillBeingMonitored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Another instance is already running! ähnelt.
        /// </summary>
        internal static string AnotherInstanceIsAlreadyRunning {
            get {
                return ResourceManager.GetString("AnotherInstanceIsAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die KeepRunning ähnelt.
        /// </summary>
        internal static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose check interval ähnelt.
        /// </summary>
        internal static string ChooseCheckInterval {
            get {
                return ResourceManager.GetString("ChooseCheckInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose file ähnelt.
        /// </summary>
        internal static string ChooseFile {
            get {
                return ResourceManager.GetString("ChooseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click to choose the executable to monitor ähnelt.
        /// </summary>
        internal static string ClickToChoose {
            get {
                return ResourceManager.GetString("ClickToChoose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit application ähnelt.
        /// </summary>
        internal static string ConfirmExit {
            get {
                return ResourceManager.GetString("ConfirmExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Register context menu ähnelt.
        /// </summary>
        internal static string ContextMenuRegister {
            get {
                return ResourceManager.GetString("ContextMenuRegister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Once a day ähnelt.
        /// </summary>
        internal static string Daily {
            get {
                return ResourceManager.GetString("Daily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A small application to check periodically whether a program is running and to start that program if it is not running.&lt;br&gt;
        ///1. Choose a program with a click on the button.&lt;br&gt;
        ///2. If it is not in the systems processes list, type the processname in the field below.&lt;br&gt;
        ///3. Adjust the time period to hourly, twice a day or daily.&lt;br&gt;
        ///4. Save the settings with a click on the Save button.&lt;br&gt;
        ///6. Start/Stop the monitoring with a click on the timer button in the middle of the screen.&lt;br&gt;
        ///You can create a deskto [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create desktop link ähnelt.
        /// </summary>
        internal static string DesktopLink {
            get {
                return ResourceManager.GetString("DesktopLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Executable Files|*.exe ähnelt.
        /// </summary>
        internal static string ExecutableFilesExe {
            get {
                return ResourceManager.GetString("ExecutableFilesExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        internal static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File not valid: {0} ähnelt.
        /// </summary>
        internal static string FileNotValid0 {
            get {
                return ResourceManager.GetString("FileNotValid0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap help {
            get {
                object obj = ResourceManager.GetObject("help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        internal static string HelpLabel {
            get {
                return ResourceManager.GetString("HelpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Once an hour ähnelt.
        /// </summary>
        internal static string Hourly {
            get {
                return ResourceManager.GetString("Hourly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap info {
            get {
                object obj = ResourceManager.GetObject("info", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info about {0} ähnelt.
        /// </summary>
        internal static string InfoAbout {
            get {
                return ResourceManager.GetString("InfoAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        internal static System.Drawing.Icon keeprunning {
            get {
                object obj = ResourceManager.GetObject("keeprunning", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last Activity ähnelt.
        /// </summary>
        internal static string LastActivity {
            get {
                return ResourceManager.GetString("LastActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap leave {
            get {
                object obj = ResourceManager.GetObject("leave", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap logo_shield {
            get {
                object obj = ResourceManager.GetObject("logo_shield", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monitoring {0} {1} ähnelt.
        /// </summary>
        internal static string Monitoring0 {
            get {
                return ResourceManager.GetString("Monitoring0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monitoring {0} stopped ähnelt.
        /// </summary>
        internal static string Monitoring0Stopped {
            get {
                return ResourceManager.GetString("Monitoring0Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No valid executable file! ähnelt.
        /// </summary>
        internal static string NoValidExecutableExeFile {
            get {
                return ResourceManager.GetString("NoValidExecutableExeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Program {0} is not running and will be started ähnelt.
        /// </summary>
        internal static string ProcessIsNotRunningAndWillBeStarted {
            get {
                return ResourceManager.GetString("ProcessIsNotRunningAndWillBeStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Program {0} is running ähnelt.
        /// </summary>
        internal static string ProcessIsRunning {
            get {
                return ResourceManager.GetString("ProcessIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process name ähnelt.
        /// </summary>
        internal static string ProcessName {
            get {
                return ResourceManager.GetString("ProcessName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process name to check if executable is not found in process list ähnelt.
        /// </summary>
        internal static string ProcessNameToCheck {
            get {
                return ResourceManager.GetString("ProcessNameToCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready ähnelt.
        /// </summary>
        internal static string Ready {
            get {
                return ResourceManager.GetString("Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Really close the application? ähnelt.
        /// </summary>
        internal static string ReallyCloseTheApplication {
            get {
                return ResourceManager.GetString("ReallyCloseTheApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap rechteck_40x40 {
            get {
                object obj = ResourceManager.GetObject("rechteck_40x40", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap rechteck_80x80 {
            get {
                object obj = ResourceManager.GetObject("rechteck_80x80", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap running {
            get {
                object obj = ResourceManager.GetObject("running", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap save {
            get {
                object obj = ResourceManager.GetObject("save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        internal static string SaveSettings {
            get {
                return ResourceManager.GetString("SaveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings changed. Please click &apos;Save&apos; button! ähnelt.
        /// </summary>
        internal static string SettingsHaveChangedPleaseClickSaveButton {
            get {
                return ResourceManager.GetString("SettingsHaveChangedPleaseClickSaveButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap start {
            get {
                object obj = ResourceManager.GetObject("start", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die start/stop monitoring ähnelt.
        /// </summary>
        internal static string StartStopMonitoring {
            get {
                return ResourceManager.GetString("StartStopMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop {
            get {
                object obj = ResourceManager.GetObject("stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap timer {
            get {
                object obj = ResourceManager.GetObject("timer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die twice a day ähnelt.
        /// </summary>
        internal static string TwoTimesADay {
            get {
                return ResourceManager.GetString("TwoTimesADay", resourceCulture);
            }
        }
    }
}
